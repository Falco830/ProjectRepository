import java.util.HashMap;
import java.util.Scanner;

public class TicTacToeYo {


	public static void main(String[] args) {
		// TODO Auto-generated method stub
		char[][] placement;
		System.out.println(ticTacToeGrid());
	}
	
	public static String ticTacToeGrid(/*char[][] grid*/) {
		Scanner input = new Scanner(System.in);
		int x = 0;
		int o = 0;
		
		HashMap<Integer, String> dummyData4 = new HashMap<Integer, String>(); //for 4
		dummyData4.put(0, "2,3");
		dummyData4.put(1, "1,3");
		dummyData4.put(2, "0,3");
		dummyData4.put(3, "2,0");
		dummyData4.put(4, "0,2");
		dummyData4.put(5, "1,0");
		dummyData4.put(6, "0,0");
		dummyData4.put(7, "2,1");
		dummyData4.put(6, "0,1");
		
		
		int gridSize = input.nextInt();
		
		
		char[][] grid = new char[gridSize][gridSize];
		
		System.out.print("|");
		for(int i = 0; i<gridSize;i++) {			
			
			for(int j = 0; j<gridSize;j++) {
				System.out.print(j + ", " + i  +"|");
			}
			System.out.println();
			System.out.print("|");
		}
		
		/*System.out.println(" ul|uc|ur"
				+ "\n ml|mc|mr"
				+ "\n bl|bc|br");*/
		for(int i = 0; i < (gridSize*gridSize); i++) {
			System.out.println("Players turn: ");
			String placement =  dummyData4.get(i);//input.nextLine();
			
			if(i%2 == 0) {
				grid = ticTacToe(grid, placement,'x');				
			}else {
				grid = ticTacToe(grid, placement,'o');
			}
			for(int k = 0; i<gridSize;i++) {			
				
				for(int j = 0; j<gridSize;j++) {
					System.out.print(grid[j][k] +"|");
				}
				System.out.println();
				System.out.print("|");
			}
		
			if('x' >= gridSize) { //start checking
				System.out.println("checking... ");
				if(checkWinner(grid)) {
					return "Winner!";
				}
			}
		}
		System.out.println(grid[0][0] + "|" + grid[1][0] + "|" + grid[2][0]
				 /*"\n" +"_____________"*/
				+ "\n" + grid[0][1] + "|" + grid[1][1] + "|" + grid[2][1]
				 /*"\n" +"_____________"*/
				+ "\n"  + grid[0][2] + "|" + grid[1][2] + "|" + grid[2][2]);	
		
		
		return "Cats Game";
	}
	
	public static boolean checkWinner(char[][] grid) {
		//check rows
		for(int i = 0; i < grid.length; i++) {			
			for(int j = 0; j < grid.length-1; j++) {
				System.out.println("i "+ i + " j " + j);
				if(grid[i][j] != grid[i][j+1] && (grid[i][j] != 'x' || grid[i][j] != 'o')) {
					System.out.println("broken ");
					break;
				}else if (j == grid.length - 2 && (grid[i][j] == 'x' || grid[i][j] == 'o')){
					System.out.println("trued ");
					return true;
				}				
			}			
		}
		System.out.println("checked rows ");
		//check columns
		for(int i = 0; i < grid.length; i++) {			
			for(int j = 0; j < grid.length-1; j++) {
				if(grid[j][i] != grid[j+1][i] && (grid[j][i] != 'x' || grid[j][i] != 'o')) {
					break;
				}else if (j == grid.length - 2 && (grid[j][i] == 'x' || grid[j][i] == 'o')){
					return true;
				}				
			}			
		}
		System.out.println("checked columns ");
		//check diaganols 
		/*char firstValue = grid[0][0];
		for(int i = 0; i < grid.length; i++) {			
			for(int j = 0; j < grid.length; j++) {
				if(i == j) {					
					if(grid[i][j] != grid[i][j] && (grid[i][j] != 'x' || grid[i][j] != 'o')) {
						break;
					}else if (firstValue == grid[i][j]){
						firstValue = grid[i][j];
						if(j == grid.length-1  && (grid[j][i] == 'x' || grid[j][i] == 'o')) {
						return true;
						}
					}		
				}
			}			
		}	
		System.out.println("checked diaganols ");*/
		return false;
	}
	
	
	public static char[][] ticTacToe(char[][]  grid, String placement, char player){		
		
		String[] position =  placement.split("[,]");
		int x = Integer.valueOf(position[0]);
		int y = Integer.valueOf(position[1]);
		
		
		grid[y][x] = player;
		return grid;
	}
	
	

}
